{"version":3,"sources":["constants.ts","calculation/Storage.ts","components/Button.tsx","components/ControlPanel.tsx","components/EdgeView.tsx","components/NodeView.tsx","calculation/Keyboard.ts","redux/actions.tsx","components/StageView.tsx","hooks/useGlobalKeyboardShortcut.ts","hooks/useGlobalKeyboard.ts","hooks/useResize.ts","calculation/generateId.ts","calculation/generateN.ts","calculation/Calculation.ts","redux/reducer.tsx","app.tsx"],"names":["STORAGE_STATE_VERSION","STORAGE_STATE_KEY","save","state","serializedState","data","version","JSON","stringify","serialize","localStorage","setItem","load","serializedData","deserializedData","parse","error","deserialize","getItem","Button","className","children","disabled","onClick","classNames","ControlPanel","onAdd","onRemove","onClear","onRandomize","onSave","canRemove","EdgeView","edge","startNode","endNode","selected","p","useMemo","dx","x","dy","y","ln","Math","sqrt","calculateDirection","handleClick","useCallback","event","stopPropagation","x1","y1","x2","y2","markerEnd","KeyCode","ActionType","NodeView","node","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","useState","startPoint","setStartPoint","handleMouseDown","point","clientX","clientY","start","current","handleMouseUp","payload","handleMouseMove","useEffect","document","body","addEventListener","removeEventListener","handleDoubleClick","dragging","cx","cy","r","text","Text","width","NODE_RADIUS","height","StageView","stage","viewBox","arrowMarker","dotMarker","id","refX","refY","markerWidth","markerHeight","orient","d","fill","useGlobalKeyboardShortcut","dispatch","onKeyDown","element","handleKeyDown","target","useGlobalKeyboard","code","KEY_A","BACKSPACE","type","GRAPH_REMOVE","ESCAPE","GRAPH_DESELECT","ctrlKey","metaKey","KEY_S","preventDefault","DELAY","useResize","callback","ref","useRef","handleResize","delay","timeoutId","reset","clearTimeout","setTimeout","debounce","window","generateId","generate","generateN","n","floor","random","generateNodes","result","i","push","repeat","map","generateNode","guessNode","nodes","box","calculateAvailableBox","length","w2","w","h2","h","lt","rt","lb","rb","min","xs","slice","sort","ys","every","isSame","initialState","edges","selectedId","reducer","action","APP_LOAD","APP_RANDOMIZE","GRAPH_CLEAR","newNodes","filter","newEdges","end","GRAPH_SELECT","NODE_ADD","newNode","NODE_UPDATE","updateNode","EDGE_ADD","hasNodeById","nodeId1","nodeId2","find","newEdge","noop","initialStage","rootElement","getElementById","ReactDOM","render","stageContainerRef","setStage","draggingNode","setDraggingNode","setDragging","useReducer","nodesById","values","forEach","value","createLookupTable","handleClear","handleAdd","handleClickNode","handleClickEdge","newText","prompt","handleDeselect","handleRemove","_","calculateDraggingNode","a","b","handleSave","handleRandomize","getBoundingClientRect","loadedState","key"],"mappings":"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","file":"static/js/main.36cdd924.chunk.js","sourcesContent":["export const VISUAL_WIDTH = 500;\nexport const VISUAL_HEIGHT = 500;\nexport const LOGICAL_WIDTH = 500;\nexport const LOGICAL_HEIGHT = 500;\nexport const LOGICAL_MARGIN = 0;\nexport const NODE_RADIUS = 36;\n\nexport const STORAGE_STATE_VERSION = 1;\nexport const STORAGE_STATE_KEY = 'state';\n","import { STORAGE_STATE_KEY, STORAGE_STATE_VERSION } from '../constants';\nimport { State } from './State';\n\ninterface Data {\n  version: number;\n  data: State;\n}\n\nexport function save(state: State): void {\n  const serializedState = serialize(state);\n  localStorage.setItem(STORAGE_STATE_KEY, serializedState);\n}\n\nexport function load(): State | null {\n  const serializedData = localStorage.getItem(STORAGE_STATE_KEY);\n  return deserialize(serializedData);\n}\n\nfunction serialize(state: State): string {\n  const data: Data = { version: STORAGE_STATE_VERSION, data: state };\n  return JSON.stringify(data);\n}\n\nfunction deserialize(serializedData: string | null): State | null {\n  try {\n    if (serializedData === null) {\n      return null;\n    }\n\n    const deserializedData = JSON.parse(serializedData);\n    if (!validate(deserializedData)) {\n      return null;\n    }\n\n    return deserializedData.data;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction validate(data: any): data is Data {\n  return data != null && typeof data === 'object' && data.version === STORAGE_STATE_VERSION;\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  onClick: (event: React.MouseEvent) => void;\n}\n\nexport const Button: React.FunctionComponent<Props> = ({\n  className,\n  children,\n  disabled,\n  onClick,\n}) => {\n  return (\n    <button className={classNames('Button', className)} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Button } from './Button';\n\nexport const ControlPanel: React.FunctionComponent<{\n  onAdd: () => void;\n  onRemove: () => void;\n  onClear: () => void;\n  onSave: () => void;\n  onRandomize: () => void;\n  canRemove: boolean;\n}> = ({ onAdd, onRemove, onClear, onRandomize, onSave, canRemove }) => {\n  return (\n    <div className=\"ControlPanel\">\n      <Button className=\"ControlPanel__button\" onClick={onAdd}>\n        Add (A)\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onRemove} disabled={!canRemove}>\n        Remove (Del)\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onClear}>\n        Clear\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onRandomize}>\n        Randomize\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onSave}>\n        Save (Cmd+S)\n      </Button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { Edge } from '../calculation/Edge';\nimport { Node } from '../calculation/Node';\nimport { Point } from '../calculation/Point';\nimport { NODE_RADIUS } from '../constants';\n\ninterface Props {\n  edge: Edge;\n  startNode: Node;\n  endNode: Node;\n  selected: boolean;\n  onClick: (edge: Edge, event: React.MouseEvent) => void;\n}\n\nexport const EdgeView: React.FunctionComponent<Props> = ({\n  edge,\n  startNode,\n  endNode,\n  selected,\n  onClick,\n}) => {\n  const p = useMemo(() => calculateDirection(startNode, endNode), [startNode, endNode]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onClick(edge, event);\n    },\n    [edge, onClick],\n  );\n\n  return (\n    <>\n      <line\n        className={classNames('EdgeView', { 'EdgeView--selected': selected })}\n        x1={startNode.x + p.x * NODE_RADIUS}\n        y1={startNode.y + p.y * NODE_RADIUS}\n        x2={endNode.x - p.x * NODE_RADIUS}\n        y2={endNode.y - p.y * NODE_RADIUS}\n        markerEnd=\"url(#arrow)\"\n        onClick={handleClick}\n      />\n    </>\n  );\n};\n\nfunction calculateDirection(startNode: Node, endNode: Node): Point {\n  let dx = endNode.x - startNode.x;\n  let dy = endNode.y - startNode.y;\n  const ln = Math.sqrt(dx * dx + dy * dy);\n  dx /= ln;\n  dy /= ln;\n  return { x: dx, y: dy };\n}\n","import classNames from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DragPayload } from '../calculation/DragPayload';\nimport { Node } from '../calculation/Node';\nimport { Point } from '../calculation/Point';\nimport { NODE_RADIUS } from '../constants';\n\ninterface Props {\n  node: Node;\n  selected: boolean;\n  onClick: (node: Node, event: React.MouseEvent) => void;\n  onDoubleClick: (node: Node, event: React.MouseEvent) => void;\n  onMouseDown: (payload: DragPayload, event: React.MouseEvent) => void;\n  onMouseUp: (payload: DragPayload) => void;\n  onMouseMove: (payload: DragPayload) => void;\n}\n\nexport const NodeView: React.FunctionComponent<Props> = ({\n  node,\n  selected,\n  onClick,\n  onDoubleClick,\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n}) => {\n  const [startPoint, setStartPoint] = useState<Point | null>(null);\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      const point = { x: event.clientX, y: event.clientY };\n      setStartPoint(point);\n      const payload = { node, start: point, current: point };\n      onMouseDown(payload, event);\n    },\n    [onMouseDown, node],\n  );\n\n  const handleMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (startPoint !== null) {\n        const point = { x: event.clientX, y: event.clientY };\n        const payload = { node, start: startPoint, current: point };\n        setStartPoint(null);\n        onMouseUp(payload);\n      }\n    },\n    [onMouseUp, node, startPoint],\n  );\n\n  const handleMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (startPoint !== null) {\n        const point = { x: event.clientX, y: event.clientY };\n        const payload = { node, start: startPoint, current: point };\n        onMouseMove(payload);\n      }\n    },\n    [onMouseMove, node, startPoint],\n  );\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.body.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseUp]);\n\n  useEffect(() => {\n    if (startPoint === null) {\n      return;\n    }\n\n    document.body.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      document.body.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [handleMouseMove, startPoint]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onClick(node, event);\n    },\n    [onClick, node],\n  );\n\n  const handleDoubleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onDoubleClick(node, event);\n    },\n    [onDoubleClick, node],\n  );\n\n  return (\n    <>\n      <circle\n        className={classNames('NodeView', { 'NodeView--selected': selected, dragging: startPoint })}\n        cx={node.x}\n        cy={node.y}\n        r={NODE_RADIUS}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        onMouseDown={handleMouseDown}\n      />\n      <Text x={node.x} y={node.y} text={node.text} />\n    </>\n  );\n};\n\n/**\n * HACK\n * @see https://stackoverflow.com/questions/4991171/auto-line-wrapping-in-svg-text\n */\nconst Text: React.FunctionComponent<{ x: number; y: number; text: string }> = ({ x, y, text }) => {\n  return (\n    <foreignObject\n      className=\"NodeView__text\"\n      x={x - NODE_RADIUS}\n      y={y - NODE_RADIUS}\n      width={NODE_RADIUS * 2}\n      height={NODE_RADIUS * 2}\n    >\n      <p className=\"NodeView__text-inner\">{text}</p>\n    </foreignObject>\n  );\n\n  // return (\n  //   <text className=\"NodeView__text\" textAnchor=\"middle\" dominantBaseline=\"central\" x={x} y={y}>\n  //     {text}\n  //   </text>\n  // );\n};\n","export enum KeyCode {\n  BACKSPACE = 'Backspace',\n  ENTER = 'Enter',\n  ESCAPE = 'Escape',\n  KEY_A = 'KeyA',\n  KEY_D = 'KeyD',\n  KEY_R = 'KeyR',\n  KEY_S = 'KeyS',\n  KEY_W = 'KeyW',\n}\n","import { Node } from '../calculation/Node';\nimport { Stage } from '../calculation/Stage';\nimport { State } from '../calculation/State';\n\nexport enum ActionType {\n  APP_LOAD,\n  APP_RANDOMIZE,\n  GRAPH_CLEAR,\n  NODE_ADD,\n  GRAPH_REMOVE,\n  NODE_UPDATE,\n  GRAPH_SELECT,\n  GRAPH_DESELECT,\n  EDGE_ADD,\n}\n\nexport type Action =\n  | {\n      type: ActionType.APP_LOAD;\n      payload: { state: State };\n    }\n  | {\n      type: ActionType.APP_RANDOMIZE;\n      payload: { stage: Stage };\n    }\n  | {\n      type: ActionType.GRAPH_CLEAR;\n    }\n  | {\n      type: ActionType.NODE_ADD;\n      payload: { stage: Stage };\n    }\n  | {\n      type: ActionType.GRAPH_REMOVE;\n    }\n  | {\n      type: ActionType.NODE_UPDATE;\n      payload: {\n        node: Node;\n      };\n    }\n  | {\n      type: ActionType.GRAPH_SELECT;\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: ActionType.GRAPH_DESELECT;\n    }\n  | {\n      type: ActionType.EDGE_ADD;\n      payload: {\n        start: string | null;\n        end: string;\n      };\n    };\n","import React from 'react';\nimport { Stage } from '../calculation/Stage';\n\ninterface Props {\n  stage: Stage;\n}\n\nexport const StageView: React.FunctionComponent<Props> = ({ children, stage }) => {\n  return (\n    <svg\n      className=\"Stage\"\n      width={stage.width}\n      height={stage.height}\n      viewBox={`0 0 ${stage.width} ${stage.height}`}\n    >\n      <defs>\n        {arrowMarker}\n        {dotMarker}\n      </defs>\n      {children}\n    </svg>\n  );\n};\n\n/**\n * Arrow marker\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker\n */\nconst arrowMarker = (\n  <marker\n    id=\"arrow\"\n    viewBox=\"0 0 10 10\"\n    refX=\"5\"\n    refY=\"5\"\n    markerWidth=\"6\"\n    markerHeight=\"6\"\n    orient=\"auto-start-reverse\"\n  >\n    <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n  </marker>\n);\n\n/**\n * Dot marker\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker\n */\nconst dotMarker = (\n  <marker id=\"dot\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"red\" />\n  </marker>\n);\n","import { Dispatch, useCallback } from 'react';\nimport { KeyCode } from '../calculation/Keyboard';\nimport { Action, ActionType } from '../redux/actions';\nimport { useGlobalKeyboard } from './useGlobalKeyboard';\n\ninterface Options {\n  dispatch: Dispatch<Action>;\n  onAdd: () => void;\n  onSave: () => void;\n}\n\nexport function useGlobalKeyboardShortcut({ dispatch, onAdd, onSave }: Options) {\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.code === KeyCode.KEY_A) {\n        onAdd();\n      } else if (event.code === KeyCode.BACKSPACE) {\n        dispatch({ type: ActionType.GRAPH_REMOVE });\n      } else if (event.code === KeyCode.ESCAPE) {\n        dispatch({ type: ActionType.GRAPH_DESELECT });\n      } else if ((event.ctrlKey || event.metaKey) && event.code === KeyCode.KEY_S) {\n        onSave();\n      } else {\n        return;\n      }\n      event.preventDefault();\n    },\n    [dispatch, onAdd, onSave],\n  );\n\n  useGlobalKeyboard({ onKeyDown });\n}\n","import { useEffect } from 'react';\n\ninterface Options {\n  onKeyDown: (event: KeyboardEvent) => void;\n}\n\nexport function useGlobalKeyboard({ onKeyDown }: Options): void {\n  useEffect(() => {\n    const element = document.body;\n\n    function handleKeyDown(event: KeyboardEvent): void {\n      // Call onKeyDown only when no elements are focused\n      if (event.target === element) {\n        onKeyDown(event);\n      }\n    }\n\n    element.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      element.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onKeyDown]);\n}\n","import { useEffect, useRef } from 'react';\n\nconst DELAY = 400;\n\nfunction debounce(callback: () => void, delay: number): () => void {\n  let timeoutId: number | null = null;\n  function reset() {\n    if (timeoutId !== null) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  }\n  function debounced() {\n    reset();\n    timeoutId = setTimeout(() => {\n      callback();\n    }, delay);\n    return reset;\n  }\n  return debounced;\n}\n\nexport function useResize(callback: () => void): void {\n  const ref = useRef(callback);\n\n  useEffect(() => {\n    ref.current = callback;\n  }, [ref, callback]);\n\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      ref.current();\n    }, DELAY);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [ref]);\n}\n","import { generate } from 'shortid';\n\nexport function generateId(): string {\n  return generate();\n}\n","export function generateN(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n","import { generateId } from './generateId';\nimport { generateN } from './generateN';\nimport { Node } from './Node';\nimport { Stage } from './Stage';\n\ninterface Box {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\ninterface Result {\n  box: Box;\n  nodes: Node[];\n}\n\nfunction repeat(n: number): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < n; i += 1) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction generateNode(stage: Stage): Node {\n  const id = generateId();\n  const x = generateN(stage.width);\n  const y = generateN(stage.height);\n  return { id, x, y, text: 'sample' };\n}\n\nexport function generateNodes(stage: Stage): Node[] {\n  return repeat(5).map(() => generateNode(stage));\n}\n\nexport function guessNode(nodes: Node[], stage: Stage): Node {\n  const box0 = { x: 0, y: 0, w: stage.width, h: stage.height };\n  const box = calculateAvailableBox(box0, nodes);\n  const id = generateId();\n  const x = box.x + box.w / 2;\n  const y = box.y + box.h / 2;\n  return { id, x, y, text: '' };\n}\n\nfunction calculateAvailableBox(box: Box, nodes: Node[]): Box {\n  if (nodes.length === 0) {\n    return box;\n  }\n\n  const w2 = box.w / 2;\n  const h2 = box.h / 2;\n  const cx = box.x + w2;\n  const cy = box.y + h2;\n  const lt: Result = { box: { x: box.x, y: box.y, w: w2, h: h2 }, nodes: [] };\n  const rt: Result = { box: { x: cx, y: box.y, w: w2, h: h2 }, nodes: [] };\n  const lb: Result = { box: { x: box.x, y: cy, w: w2, h: h2 }, nodes: [] };\n  const rb: Result = { box: { x: cx, y: cy, w: w2, h: h2 }, nodes: [] };\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.x <= cx) {\n      if (node.y <= cy) {\n        lt.nodes.push(node);\n      } else {\n        lb.nodes.push(node);\n      }\n    } else {\n      if (node.y <= cy) {\n        rt.nodes.push(node);\n      } else {\n        rb.nodes.push(node);\n      }\n    }\n  }\n\n  const min = sortByLength([lt, rt, lb, rb]);\n  return isSame(nodes, min.nodes) ? min.box : calculateAvailableBox(min.box, min.nodes);\n}\n\nfunction isSame(xs: Node[], ys: Node[]): boolean {\n  return xs.length === ys.length && xs.every((x, i) => x === ys[i]);\n}\n\nfunction sortByLength(xs: Result[]): Result {\n  return xs.slice(0).sort((x, y) => x.nodes.length - y.nodes.length)[0];\n}\n","import { generateNodes, guessNode } from '../calculation/Calculation';\nimport { Edge } from '../calculation/Edge';\nimport { generateId } from '../calculation/generateId';\nimport { Node } from '../calculation/Node';\nimport { State } from '../calculation/State';\nimport { Action, ActionType } from './actions';\n\nexport const initialState: State = {\n  nodes: [],\n  edges: [],\n  selectedId: null,\n};\n\nexport function reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionType.APP_LOAD: {\n      return action.payload.state;\n    }\n    case ActionType.APP_RANDOMIZE: {\n      const { stage } = action.payload;\n      const newState: State = {\n        nodes: generateNodes(stage),\n        edges: [],\n        selectedId: null,\n      };\n      return newState;\n    }\n    case ActionType.GRAPH_CLEAR: {\n      return { ...state, nodes: [], edges: [], selectedId: null };\n    }\n    case ActionType.GRAPH_REMOVE: {\n      const newNodes = state.nodes.filter(node => node.id !== state.selectedId);\n      const newEdges = state.edges.filter(\n        edge =>\n          edge.id !== state.selectedId &&\n          edge.start !== state.selectedId &&\n          edge.end !== state.selectedId,\n      );\n      return { ...state, nodes: newNodes, edges: newEdges };\n    }\n    case ActionType.GRAPH_SELECT: {\n      const { id } = action.payload;\n      return { ...state, selectedId: id };\n    }\n    case ActionType.GRAPH_DESELECT: {\n      return { ...state, selectedId: null };\n    }\n    case ActionType.NODE_ADD: {\n      const { stage } = action.payload;\n      const newNode = guessNode(state.nodes, stage);\n      return {\n        ...state,\n        nodes: [...state.nodes, newNode],\n      };\n    }\n    case ActionType.NODE_UPDATE: {\n      const { node } = action.payload;\n      return { ...state, nodes: updateNode(state.nodes, node) };\n    }\n    case ActionType.EDGE_ADD: {\n      const { start, end } = action.payload;\n      if (\n        start === null ||\n        start === end ||\n        !hasNodeById(state.nodes, start) ||\n        !hasNodeById(state.nodes, end) ||\n        hasEdgeByNodeIds(state.edges, start, end)\n      ) {\n        return state;\n      }\n      const newEdge = { id: generateId(), start, end };\n      return {\n        ...state,\n        edges: [...state.edges, newEdge],\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction updateNode(nodes: Node[], newNode: Node): Node[] {\n  return nodes.map(node => (node.id === newNode.id ? newNode : node));\n}\n\nfunction hasNodeById(nodes: Node[], id: string): boolean {\n  return !!nodes.find(node => node.id === id);\n}\n\nfunction hasEdgeByNodeIds(edges: Edge[], nodeId1: string, nodeId2: string): boolean {\n  return !!edges.find(\n    edge =>\n      (edge.start === nodeId1 && edge.end === nodeId2) ||\n      (edge.start === nodeId2 && edge.end === nodeId1),\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragPayload } from './calculation/DragPayload';\nimport { Edge } from './calculation/Edge';\nimport { Node } from './calculation/Node';\nimport { Stage } from './calculation/Stage';\nimport { load, save } from './calculation/Storage';\nimport { ControlPanel } from './components/ControlPanel';\nimport { EdgeView } from './components/EdgeView';\nimport { NodeView } from './components/NodeView';\nimport { StageView } from './components/StageView';\nimport { useGlobalKeyboardShortcut } from './hooks/useGlobalKeyboardShortcut';\nimport { useResize } from './hooks/useResize';\nimport { ActionType } from './redux/actions';\nimport { initialState, reducer } from './redux/reducer';\n\nconst noop = () => {};\n\nconst initialStage: Stage = { width: 1, height: 1 };\n\nconst App: React.FunctionComponent<{}> = () => {\n  const stageContainerRef = useRef<HTMLDivElement>(null);\n  const [stage, setStage] = useState(initialStage);\n  const [draggingNode, setDraggingNode] = useState<Node | null>(null);\n  const [dragging, setDragging] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { nodes, edges, selectedId } = state;\n  const nodesById = useMemo(() => createLookupTable(nodes), [nodes]);\n\n  const handleClear = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_CLEAR });\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    dispatch({ type: ActionType.NODE_ADD, payload: { stage } });\n  }, [stage]);\n\n  const handleClickNode = useCallback(\n    (node: Node, event: React.MouseEvent) => {\n      if (event.ctrlKey || event.metaKey) {\n        dispatch({ type: ActionType.EDGE_ADD, payload: { start: selectedId, end: node.id } });\n      } else {\n        dispatch({ type: ActionType.GRAPH_SELECT, payload: { id: node.id } });\n      }\n    },\n    [selectedId],\n  );\n\n  const handleClickEdge = useCallback((edge: Edge) => {\n    dispatch({ type: ActionType.GRAPH_SELECT, payload: { id: edge.id } });\n  }, []);\n\n  const handleDoubleClick = useCallback((node: Node) => {\n    const newText = prompt('text', node.text);\n    if (newText !== null) {\n      const newNode = { ...node, text: newText };\n      dispatch({ type: ActionType.NODE_UPDATE, payload: { node: newNode } });\n    }\n  }, []);\n\n  const handleDeselect = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_DESELECT });\n  }, []);\n\n  const handleRemove = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_REMOVE });\n  }, []);\n\n  const handleMouseDown = useCallback(({ node }: DragPayload) => {\n    setDraggingNode(node);\n  }, []);\n\n  const handleMouseUp = useCallback(\n    (_: DragPayload) => {\n      if (draggingNode !== null) {\n        dispatch({ type: ActionType.NODE_UPDATE, payload: { node: draggingNode } });\n        setDraggingNode(null);\n        setDragging(false);\n      }\n    },\n    [draggingNode],\n  );\n\n  const handleMouseMove = useCallback(\n    (payload: DragPayload) => {\n      if (draggingNode !== null) {\n        const node = calculateDraggingNode(payload);\n        if (!isEqual(node, payload.node)) {\n          setDraggingNode(node);\n          setDragging(true);\n        }\n      }\n    },\n    [draggingNode],\n  );\n\n  const handleSave = useCallback(() => {\n    save(state);\n  }, [state]);\n\n  const handleRandomize = useCallback(() => {\n    dispatch({ type: ActionType.APP_RANDOMIZE, payload: { stage } });\n  }, [stage]);\n\n  const handleResize = useCallback(() => {\n    if (stageContainerRef.current === null) {\n      return;\n    }\n\n    const { width, height } = stageContainerRef.current.getBoundingClientRect();\n    setStage({ width, height });\n  }, [stageContainerRef]);\n\n  useEffect(() => {\n    const loadedState = load();\n    if (loadedState !== null) {\n      dispatch({ type: ActionType.APP_LOAD, payload: { state: loadedState } });\n    }\n  }, []);\n\n  useResize(handleResize);\n\n  useEffect(handleResize, []);\n\n  useGlobalKeyboardShortcut({\n    dispatch,\n    onAdd: handleAdd,\n    onSave: handleSave,\n  });\n\n  return (\n    <div className=\"App\" onClick={handleDeselect}>\n      <ControlPanel\n        onAdd={handleAdd}\n        onRemove={handleRemove}\n        onClear={handleClear}\n        onRandomize={handleRandomize}\n        onSave={handleSave}\n        canRemove={selectedId !== null}\n      />\n      <div className=\"StageContainer\" ref={stageContainerRef}>\n        <StageView stage={stage}>\n          {edges.map(edge => (\n            <EdgeView\n              key={edge.id}\n              edge={edge}\n              startNode={nodesById[edge.start]}\n              endNode={nodesById[edge.end]}\n              selected={selectedId === edge.id}\n              onClick={handleClickEdge}\n            />\n          ))}\n          {nodes.map(node => (\n            <NodeView\n              key={node.id}\n              node={node}\n              selected={selectedId === node.id}\n              onClick={handleClickNode}\n              onDoubleClick={handleDoubleClick}\n              onMouseDown={handleMouseDown}\n              onMouseUp={handleMouseUp}\n              onMouseMove={handleMouseMove}\n            />\n          ))}\n          {dragging && draggingNode !== null && (\n            <NodeView\n              key={draggingNode.id}\n              node={draggingNode}\n              selected={false}\n              onClick={noop}\n              onDoubleClick={noop}\n              onMouseDown={noop}\n              onMouseUp={noop}\n              onMouseMove={noop}\n            />\n          )}\n        </StageView>\n      </div>\n    </div>\n  );\n};\n\nfunction createLookupTable<T extends { id: string }>(values: T[]): Record<string, T> {\n  const result: Record<string, T> = {};\n  values.forEach(value => {\n    result[value.id] = value;\n  });\n  return result;\n}\n\nfunction calculateDraggingNode({ node, start, current }: DragPayload): Node {\n  const dx = current.x - start.x;\n  const dy = current.y - start.y;\n  return { ...node, x: Math.floor(node.x + dx), y: Math.floor(node.y + dy) };\n}\n\nfunction isEqual(a: Node, b: Node): boolean {\n  return a.id === b.id && a.x === b.x && a.y === b.y;\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}