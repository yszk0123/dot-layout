{"version":3,"sources":["components/Button.tsx","components/ControlPanel.tsx","constants.ts","components/EdgeView.tsx","components/NodeView.tsx","redux/actions.tsx","components/Stage.tsx","calculation/generateId.ts","calculation/generateN.ts","calculation/Calculation.ts","redux/reducer.tsx","app.tsx"],"names":["Button","className","children","disabled","onClick","classNames","ControlPanel","onAdd","onRemove","onClear","canRemove","LOGICAL_WIDTH","LOGICAL_HEIGHT","SCALE_X","SCALE_Y","EdgeView","edge","startNode","endNode","selected","p","useMemo","dx","x","dy","y","ln","Math","sqrt","calculateDirection","handleClick","useCallback","event","stopPropagation","x1","y1","x2","y2","markerEnd","ActionType","NodeView","node","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","useState","startPoint","setStartPoint","handleMouseDown","point","clientX","clientY","start","current","handleMouseUp","payload","handleMouseMove","useEffect","document","body","addEventListener","removeEventListener","handleDoubleClick","dragging","cx","cy","r","text","Text","width","NODE_RADIUS","height","Stage","viewBox","arrowMarker","dotMarker","id","refX","refY","markerWidth","markerHeight","orient","d","fill","generateId","generate","generateN","n","floor","random","guessNode","nodes","box","calculateAvailableBox","length","w2","w","h2","h","lt","rt","lb","rb","i","push","min","xs","slice","sort","ys","every","isSame","initialState","result","repeat","map","edges","selectedId","reducer","state","action","type","GRAPH_CLEAR","GRAPH_REMOVE","newNodes","filter","newEdges","end","GRAPH_SELECT","GRAPH_DESELECT","NODE_ADD","newNode","NODE_UPDATE","updateNode","EDGE_ADD","hasNodeById","nodeId1","nodeId2","find","newEdge","noop","rootElement","getElementById","ReactDOM","render","draggingNode","setDraggingNode","setDragging","useReducer","dispatch","nodesById","values","forEach","value","createLookupTable","handleClear","handleAdd","handleClickNode","ctrlKey","metaKey","handleClickEdge","newText","prompt","handleDeselect","handleRemove","_","calculateDraggingNode","a","b","key"],"mappings":"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","file":"static/js/main.0319a1f5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  onClick: (event: React.MouseEvent) => void;\n}\n\nexport const Button: React.FunctionComponent<Props> = ({\n  className,\n  children,\n  disabled,\n  onClick,\n}) => {\n  return (\n    <button className={classNames('Button', className)} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Button } from './Button';\n\nexport const ControlPanel: React.FunctionComponent<{\n  onAdd: () => void;\n  onRemove: () => void;\n  onClear: () => void;\n  canRemove: boolean;\n}> = ({ onAdd, onRemove, onClear, canRemove }) => {\n  return (\n    <div className=\"ControlPanel\">\n      <Button className=\"ControlPanel__button\" onClick={onAdd}>\n        Add\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onRemove} disabled={!canRemove}>\n        Remove\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onClear}>\n        Clear\n      </Button>\n    </div>\n  );\n};\n","export const VISUAL_WIDTH = 500;\nexport const VISUAL_HEIGHT = 500;\nexport const LOGICAL_WIDTH = 500;\nexport const LOGICAL_HEIGHT = 500;\nexport const LOGICAL_MARGIN = 0;\nexport const SCALE_X = VISUAL_WIDTH / (LOGICAL_WIDTH + 2 * LOGICAL_MARGIN);\nexport const SCALE_Y = VISUAL_HEIGHT / (LOGICAL_HEIGHT + 2 * LOGICAL_MARGIN);\nexport const NODE_RADIUS = 36;\n","import classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { Edge } from '../calculation/Edge';\nimport { Node } from '../calculation/Node';\nimport { Point } from '../calculation/Point';\nimport { NODE_RADIUS } from '../constants';\n\ninterface Props {\n  edge: Edge;\n  startNode: Node;\n  endNode: Node;\n  selected: boolean;\n  onClick: (edge: Edge, event: React.MouseEvent) => void;\n}\n\nexport const EdgeView: React.FunctionComponent<Props> = ({\n  edge,\n  startNode,\n  endNode,\n  selected,\n  onClick,\n}) => {\n  const p = useMemo(() => calculateDirection(startNode, endNode), [startNode, endNode]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onClick(edge, event);\n    },\n    [edge, onClick],\n  );\n\n  return (\n    <>\n      <line\n        className={classNames('EdgeView', { 'EdgeView--selected': selected })}\n        x1={startNode.x + p.x * NODE_RADIUS}\n        y1={startNode.y + p.y * NODE_RADIUS}\n        x2={endNode.x - p.x * NODE_RADIUS}\n        y2={endNode.y - p.y * NODE_RADIUS}\n        markerEnd=\"url(#arrow)\"\n        onClick={handleClick}\n      />\n    </>\n  );\n};\n\nfunction calculateDirection(startNode: Node, endNode: Node): Point {\n  let dx = endNode.x - startNode.x;\n  let dy = endNode.y - startNode.y;\n  const ln = Math.sqrt(dx * dx + dy * dy);\n  dx /= ln;\n  dy /= ln;\n  return { x: dx, y: dy };\n}\n","import classNames from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DragPayload } from '../calculation/DragPayload';\nimport { Node } from '../calculation/Node';\nimport { Point } from '../calculation/Point';\nimport { NODE_RADIUS } from '../constants';\n\ninterface Props {\n  node: Node;\n  selected: boolean;\n  onClick: (node: Node, event: React.MouseEvent) => void;\n  onDoubleClick: (node: Node, event: React.MouseEvent) => void;\n  onMouseDown: (payload: DragPayload, event: React.MouseEvent) => void;\n  onMouseUp: (payload: DragPayload) => void;\n  onMouseMove: (payload: DragPayload) => void;\n}\n\nexport const NodeView: React.FunctionComponent<Props> = ({\n  node,\n  selected,\n  onClick,\n  onDoubleClick,\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n}) => {\n  const [startPoint, setStartPoint] = useState<Point | null>(null);\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      const point = { x: event.clientX, y: event.clientY };\n      setStartPoint(point);\n      const payload = { node, start: point, current: point };\n      onMouseDown(payload, event);\n    },\n    [onMouseDown, node],\n  );\n\n  const handleMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (startPoint !== null) {\n        const point = { x: event.clientX, y: event.clientY };\n        const payload = { node, start: startPoint, current: point };\n        setStartPoint(null);\n        onMouseUp(payload);\n      }\n    },\n    [onMouseUp, node, startPoint],\n  );\n\n  const handleMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (startPoint !== null) {\n        const point = { x: event.clientX, y: event.clientY };\n        const payload = { node, start: startPoint, current: point };\n        onMouseMove(payload);\n      }\n    },\n    [onMouseMove, node, startPoint],\n  );\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.body.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseUp]);\n\n  useEffect(() => {\n    if (startPoint === null) {\n      return;\n    }\n\n    document.body.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      document.body.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [handleMouseMove, startPoint]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onClick(node, event);\n    },\n    [onClick, node],\n  );\n\n  const handleDoubleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onDoubleClick(node, event);\n    },\n    [onDoubleClick, node],\n  );\n\n  return (\n    <>\n      <circle\n        className={classNames('NodeView', { 'NodeView--selected': selected, dragging: startPoint })}\n        cx={node.x}\n        cy={node.y}\n        r={NODE_RADIUS}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        onMouseDown={handleMouseDown}\n      />\n      <Text x={node.x} y={node.y} text={node.text} />\n    </>\n  );\n};\n\n/**\n * HACK\n * @see https://stackoverflow.com/questions/4991171/auto-line-wrapping-in-svg-text\n */\nconst Text: React.FunctionComponent<{ x: number; y: number; text: string }> = ({ x, y, text }) => {\n  return (\n    <foreignObject\n      className=\"NodeView__text\"\n      x={x - NODE_RADIUS}\n      y={y - NODE_RADIUS}\n      width={NODE_RADIUS * 2}\n      height={NODE_RADIUS * 2}\n    >\n      <p className=\"NodeView__text-inner\">{text}</p>\n    </foreignObject>\n  );\n\n  // return (\n  //   <text className=\"NodeView__text\" textAnchor=\"middle\" dominantBaseline=\"central\" x={x} y={y}>\n  //     {text}\n  //   </text>\n  // );\n};\n","import { Node } from '../calculation/Node';\n\nexport enum ActionType {\n  GRAPH_CLEAR,\n  NODE_ADD,\n  GRAPH_REMOVE,\n  NODE_UPDATE,\n  GRAPH_SELECT,\n  GRAPH_DESELECT,\n  EDGE_ADD,\n}\n\nexport type Action =\n  | {\n      type: ActionType.GRAPH_CLEAR;\n    }\n  | {\n      type: ActionType.NODE_ADD;\n    }\n  | {\n      type: ActionType.GRAPH_REMOVE;\n    }\n  | {\n      type: ActionType.NODE_UPDATE;\n      payload: {\n        node: Node;\n      };\n    }\n  | {\n      type: ActionType.GRAPH_SELECT;\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: ActionType.GRAPH_DESELECT;\n    }\n  | {\n      type: ActionType.EDGE_ADD;\n      payload: {\n        start: string | null;\n        end: string;\n      };\n    };\n","import React from 'react';\nimport {\n  LOGICAL_HEIGHT,\n  LOGICAL_MARGIN,\n  LOGICAL_WIDTH,\n  VISUAL_HEIGHT,\n  VISUAL_WIDTH,\n} from '../constants';\n\nexport const Stage: React.FunctionComponent<{}> = ({ children }) => {\n  return (\n    <svg\n      className=\"Stage\"\n      width={VISUAL_WIDTH}\n      height={VISUAL_HEIGHT}\n      viewBox={`${-LOGICAL_MARGIN} ${-LOGICAL_MARGIN} ${LOGICAL_WIDTH +\n        LOGICAL_MARGIN} ${LOGICAL_HEIGHT + LOGICAL_MARGIN}`}\n    >\n      <defs>\n        {arrowMarker}\n        {dotMarker}\n      </defs>\n      {children}\n    </svg>\n  );\n};\n\n/**\n * Arrow marker\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker\n */\nconst arrowMarker = (\n  <marker\n    id=\"arrow\"\n    viewBox=\"0 0 10 10\"\n    refX=\"5\"\n    refY=\"5\"\n    markerWidth=\"6\"\n    markerHeight=\"6\"\n    orient=\"auto-start-reverse\"\n  >\n    <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n  </marker>\n);\n\n/**\n * Dot marker\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker\n */\nconst dotMarker = (\n  <marker id=\"dot\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"red\" />\n  </marker>\n);\n","import { generate } from 'shortid';\n\nexport function generateId(): string {\n  return generate();\n}\n","export function generateN(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n","import { LOGICAL_HEIGHT, LOGICAL_WIDTH } from '../constants';\nimport { generateId } from './generateId';\nimport { generateN } from './generateN';\nimport { Node } from './Node';\n\ninterface Box {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\ninterface Result {\n  box: Box;\n  nodes: Node[];\n}\n\nfunction repeat(n: number): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < n; i += 1) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction generateNode(): Node {\n  const id = generateId();\n  const x = generateN(LOGICAL_WIDTH);\n  const y = generateN(LOGICAL_HEIGHT);\n  return { id, x, y, text: 'sample' };\n}\n\nexport function generateNodes(): Node[] {\n  return repeat(5).map(() => generateNode());\n}\n\nexport function guessNode(nodes: Node[]): Node {\n  const box0 = { x: 0, y: 0, w: LOGICAL_WIDTH, h: LOGICAL_HEIGHT };\n  const box = calculateAvailableBox(box0, nodes);\n  const id = generateId();\n  const x = box.x + box.w / 2;\n  const y = box.y + box.h / 2;\n  return { id, x, y, text: '' };\n}\n\nfunction calculateAvailableBox(box: Box, nodes: Node[]): Box {\n  if (nodes.length === 0) {\n    return box;\n  }\n\n  const w2 = box.w / 2;\n  const h2 = box.h / 2;\n  const cx = box.x + w2;\n  const cy = box.y + h2;\n  const lt: Result = { box: { x: box.x, y: box.y, w: w2, h: h2 }, nodes: [] };\n  const rt: Result = { box: { x: cx, y: box.y, w: w2, h: h2 }, nodes: [] };\n  const lb: Result = { box: { x: box.x, y: cy, w: w2, h: h2 }, nodes: [] };\n  const rb: Result = { box: { x: cx, y: cy, w: w2, h: h2 }, nodes: [] };\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.x <= cx) {\n      if (node.y <= cy) {\n        lt.nodes.push(node);\n      } else {\n        lb.nodes.push(node);\n      }\n    } else {\n      if (node.y <= cy) {\n        rt.nodes.push(node);\n      } else {\n        rb.nodes.push(node);\n      }\n    }\n  }\n\n  const min = sortByLength([lt, rt, lb, rb]);\n  return isSame(nodes, min.nodes) ? min.box : calculateAvailableBox(min.box, min.nodes);\n}\n\nfunction isSame(xs: Node[], ys: Node[]): boolean {\n  return xs.length === ys.length && xs.every((x, i) => x === ys[i]);\n}\n\nfunction sortByLength(xs: Result[]): Result {\n  return xs.slice(0).sort((x, y) => x.nodes.length - y.nodes.length)[0];\n}\n","import { generateNodes, guessNode } from '../calculation/Calculation';\nimport { Edge } from '../calculation/Edge';\nimport { generateId } from '../calculation/generateId';\nimport { Node } from '../calculation/Node';\nimport { Action, ActionType } from './actions';\n\ninterface State {\n  nodes: Node[];\n  edges: Edge[];\n  selectedId: string | null;\n}\n\nexport const initialState: State = {\n  nodes: generateNodes(),\n  edges: [],\n  selectedId: null,\n};\n\nexport function reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionType.GRAPH_CLEAR: {\n      return { ...state, nodes: [], edges: [], selectedId: null };\n    }\n    case ActionType.GRAPH_REMOVE: {\n      const newNodes = state.nodes.filter(node => node.id !== state.selectedId);\n      const newEdges = state.edges.filter(\n        edge =>\n          edge.id !== state.selectedId &&\n          edge.start !== state.selectedId &&\n          edge.end !== state.selectedId,\n      );\n      return { ...state, nodes: newNodes, edges: newEdges };\n    }\n    case ActionType.GRAPH_SELECT: {\n      const { id } = action.payload;\n      return { ...state, selectedId: id };\n    }\n    case ActionType.GRAPH_DESELECT: {\n      return { ...state, selectedId: null };\n    }\n    case ActionType.NODE_ADD: {\n      const newNode = guessNode(state.nodes);\n      return {\n        ...state,\n        nodes: [...state.nodes, newNode],\n      };\n    }\n    case ActionType.NODE_UPDATE: {\n      const { node } = action.payload;\n      return { ...state, nodes: updateNode(state.nodes, node) };\n    }\n    case ActionType.EDGE_ADD: {\n      const { start, end } = action.payload;\n      if (\n        start === null ||\n        start === end ||\n        !hasNodeById(state.nodes, start) ||\n        !hasNodeById(state.nodes, end) ||\n        hasEdgeByNodeIds(state.edges, start, end)\n      ) {\n        return state;\n      }\n      const newEdge = { id: generateId(), start, end };\n      return {\n        ...state,\n        edges: [...state.edges, newEdge],\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction updateNode(nodes: Node[], newNode: Node): Node[] {\n  return nodes.map(node => (node.id === newNode.id ? newNode : node));\n}\n\nfunction hasNodeById(nodes: Node[], id: string): boolean {\n  return !!nodes.find(node => node.id === id);\n}\n\nfunction hasEdgeByNodeIds(edges: Edge[], nodeId1: string, nodeId2: string): boolean {\n  return !!edges.find(\n    edge =>\n      (edge.start === nodeId1 && edge.end === nodeId2) ||\n      (edge.start === nodeId2 && edge.end === nodeId1),\n  );\n}\n","import React, { useCallback, useMemo, useReducer, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragPayload } from './calculation/DragPayload';\nimport { Edge } from './calculation/Edge';\nimport { Node } from './calculation/Node';\nimport { ControlPanel } from './components/ControlPanel';\nimport { EdgeView } from './components/EdgeView';\nimport { NodeView } from './components/NodeView';\nimport { Stage } from './components/Stage';\nimport { SCALE_X, SCALE_Y } from './constants';\nimport { ActionType } from './redux/actions';\nimport { initialState, reducer } from './redux/reducer';\n\nconst noop = () => {};\n\nconst App: React.FunctionComponent<{}> = () => {\n  const [draggingNode, setDraggingNode] = useState<Node | null>(null);\n  const [dragging, setDragging] = useState(false);\n  const [{ nodes, edges, selectedId }, dispatch] = useReducer(reducer, initialState);\n  const nodesById = useMemo(() => createLookupTable(nodes), [nodes]);\n\n  const handleClear = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_CLEAR });\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    dispatch({ type: ActionType.NODE_ADD });\n  }, []);\n\n  const handleClickNode = useCallback(\n    (node: Node, event: React.MouseEvent) => {\n      if (event.ctrlKey || event.metaKey) {\n        dispatch({ type: ActionType.EDGE_ADD, payload: { start: selectedId, end: node.id } });\n      } else {\n        dispatch({ type: ActionType.GRAPH_SELECT, payload: { id: node.id } });\n      }\n    },\n    [selectedId],\n  );\n\n  const handleClickEdge = useCallback((edge: Edge) => {\n    dispatch({ type: ActionType.GRAPH_SELECT, payload: { id: edge.id } });\n  }, []);\n\n  const handleDoubleClick = useCallback((node: Node) => {\n    const newText = prompt('text');\n    if (newText !== null) {\n      const newNode = { ...node, text: newText };\n      dispatch({ type: ActionType.NODE_UPDATE, payload: { node: newNode } });\n    }\n  }, []);\n\n  const handleDeselect = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_DESELECT });\n  }, []);\n\n  const handleRemove = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_REMOVE });\n  }, []);\n\n  const handleMouseDown = useCallback(({ node }: DragPayload) => {\n    setDraggingNode(node);\n  }, []);\n\n  const handleMouseUp = useCallback(\n    (_: DragPayload) => {\n      if (draggingNode !== null) {\n        dispatch({ type: ActionType.NODE_UPDATE, payload: { node: draggingNode } });\n        setDraggingNode(null);\n        setDragging(false);\n      }\n    },\n    [draggingNode],\n  );\n\n  const handleMouseMove = useCallback(\n    (payload: DragPayload) => {\n      if (draggingNode !== null) {\n        const node = calculateDraggingNode(payload);\n        if (!isEqual(node, payload.node)) {\n          setDraggingNode(node);\n          setDragging(true);\n        }\n      }\n    },\n    [draggingNode],\n  );\n\n  return (\n    <div className=\"App\" onClick={handleDeselect}>\n      <ControlPanel\n        onAdd={handleAdd}\n        onRemove={handleRemove}\n        onClear={handleClear}\n        canRemove={selectedId !== null}\n      />\n      <Stage>\n        {edges.map(edge => (\n          <EdgeView\n            key={edge.id}\n            edge={edge}\n            startNode={nodesById[edge.start]}\n            endNode={nodesById[edge.end]}\n            selected={selectedId === edge.id}\n            onClick={handleClickEdge}\n          />\n        ))}\n        {nodes.map(node => (\n          <NodeView\n            key={node.id}\n            node={node}\n            selected={selectedId === node.id}\n            onClick={handleClickNode}\n            onDoubleClick={handleDoubleClick}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onMouseMove={handleMouseMove}\n          />\n        ))}\n        {dragging && draggingNode !== null && (\n          <NodeView\n            key={draggingNode.id}\n            node={draggingNode}\n            selected={false}\n            onClick={noop}\n            onDoubleClick={noop}\n            onMouseDown={noop}\n            onMouseUp={noop}\n            onMouseMove={noop}\n          />\n        )}\n      </Stage>\n    </div>\n  );\n};\n\nfunction createLookupTable<T extends { id: string }>(values: T[]): Record<string, T> {\n  const result: Record<string, T> = {};\n  values.forEach(value => {\n    result[value.id] = value;\n  });\n  return result;\n}\n\nfunction calculateDraggingNode({ node, start, current }: DragPayload): Node {\n  const dx = (current.x - start.x) / SCALE_X;\n  const dy = (current.y - start.y) / SCALE_Y;\n  return { ...node, x: Math.floor(node.x + dx), y: Math.floor(node.y + dy) };\n}\n\nfunction isEqual(a: Node, b: Node): boolean {\n  return a.id === b.id && a.x === b.x && a.y === b.y;\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}