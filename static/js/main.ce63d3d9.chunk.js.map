{"version":3,"sources":["constants.ts","calculation/Storage.ts","components/Button.tsx","components/ControlPanel.tsx","components/EdgeView.tsx","components/NodeView.tsx","redux/actions.tsx","components/Stage.tsx","calculation/generateId.ts","calculation/generateN.ts","calculation/Calculation.ts","redux/reducer.tsx","app.tsx"],"names":["LOGICAL_WIDTH","LOGICAL_HEIGHT","SCALE_X","SCALE_Y","STORAGE_STATE_VERSION","STORAGE_STATE_KEY","save","state","serializedState","data","version","JSON","stringify","serialize","localStorage","setItem","load","serializedData","deserializedData","parse","error","deserialize","getItem","Button","className","children","disabled","onClick","classNames","ControlPanel","onAdd","onRemove","onClear","onRandomize","onSave","canRemove","EdgeView","edge","startNode","endNode","selected","p","useMemo","dx","x","dy","y","ln","Math","sqrt","calculateDirection","handleClick","useCallback","event","stopPropagation","x1","y1","x2","y2","markerEnd","ActionType","NodeView","node","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","useState","startPoint","setStartPoint","handleMouseDown","point","clientX","clientY","start","current","handleMouseUp","payload","handleMouseMove","useEffect","document","body","addEventListener","removeEventListener","handleDoubleClick","dragging","cx","cy","r","text","Text","width","NODE_RADIUS","height","Stage","viewBox","arrowMarker","dotMarker","id","refX","refY","markerWidth","markerHeight","orient","d","fill","generateId","generate","generateN","n","floor","random","generateNodes","result","i","push","repeat","map","guessNode","nodes","box","calculateAvailableBox","length","w2","w","h2","h","lt","rt","lb","rb","min","xs","slice","sort","ys","every","isSame","initialState","edges","selectedId","reducer","action","type","APP_LOAD","APP_RANDOMIZE","GRAPH_CLEAR","GRAPH_REMOVE","newNodes","filter","newEdges","end","GRAPH_SELECT","GRAPH_DESELECT","NODE_ADD","newNode","NODE_UPDATE","updateNode","EDGE_ADD","hasNodeById","nodeId1","nodeId2","find","newEdge","noop","rootElement","getElementById","ReactDOM","render","draggingNode","setDraggingNode","setDragging","useReducer","dispatch","nodesById","values","forEach","value","createLookupTable","handleClear","handleAdd","handleClickNode","ctrlKey","metaKey","handleClickEdge","newText","prompt","handleDeselect","handleRemove","_","calculateDraggingNode","a","b","handleSave","handleRandomize","loadedState","key"],"mappings":"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","file":"static/js/main.ce63d3d9.chunk.js","sourcesContent":["export const VISUAL_WIDTH = 500;\nexport const VISUAL_HEIGHT = 500;\nexport const LOGICAL_WIDTH = 500;\nexport const LOGICAL_HEIGHT = 500;\nexport const LOGICAL_MARGIN = 0;\nexport const SCALE_X = VISUAL_WIDTH / (LOGICAL_WIDTH + 2 * LOGICAL_MARGIN);\nexport const SCALE_Y = VISUAL_HEIGHT / (LOGICAL_HEIGHT + 2 * LOGICAL_MARGIN);\nexport const NODE_RADIUS = 36;\n\nexport const STORAGE_STATE_VERSION = 1;\nexport const STORAGE_STATE_KEY = 'state';\n","import { STORAGE_STATE_KEY, STORAGE_STATE_VERSION } from '../constants';\nimport { State } from './State';\n\ninterface Data {\n  version: number;\n  data: State;\n}\n\nexport function save(state: State): void {\n  const serializedState = serialize(state);\n  localStorage.setItem(STORAGE_STATE_KEY, serializedState);\n}\n\nexport function load(): State | null {\n  const serializedData = localStorage.getItem(STORAGE_STATE_KEY);\n  return deserialize(serializedData);\n}\n\nfunction serialize(state: State): string {\n  const data: Data = { version: STORAGE_STATE_VERSION, data: state };\n  return JSON.stringify(data);\n}\n\nfunction deserialize(serializedData: string | null): State | null {\n  try {\n    if (serializedData === null) {\n      return null;\n    }\n\n    const deserializedData = JSON.parse(serializedData);\n    if (!validate(deserializedData)) {\n      return null;\n    }\n\n    return deserializedData.data;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction validate(data: any): data is Data {\n  return data != null && typeof data === 'object' && data.version === STORAGE_STATE_VERSION;\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n  disabled?: boolean;\n  onClick: (event: React.MouseEvent) => void;\n}\n\nexport const Button: React.FunctionComponent<Props> = ({\n  className,\n  children,\n  disabled,\n  onClick,\n}) => {\n  return (\n    <button className={classNames('Button', className)} disabled={disabled} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Button } from './Button';\n\nexport const ControlPanel: React.FunctionComponent<{\n  onAdd: () => void;\n  onRemove: () => void;\n  onClear: () => void;\n  onSave: () => void;\n  onRandomize: () => void;\n  canRemove: boolean;\n}> = ({ onAdd, onRemove, onClear, onRandomize, onSave, canRemove }) => {\n  return (\n    <div className=\"ControlPanel\">\n      <Button className=\"ControlPanel__button\" onClick={onAdd}>\n        Add\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onRemove} disabled={!canRemove}>\n        Remove\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onClear}>\n        Clear\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onRandomize}>\n        Randomize\n      </Button>\n      <Button className=\"ControlPanel__button\" onClick={onSave}>\n        Save\n      </Button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { Edge } from '../calculation/Edge';\nimport { Node } from '../calculation/Node';\nimport { Point } from '../calculation/Point';\nimport { NODE_RADIUS } from '../constants';\n\ninterface Props {\n  edge: Edge;\n  startNode: Node;\n  endNode: Node;\n  selected: boolean;\n  onClick: (edge: Edge, event: React.MouseEvent) => void;\n}\n\nexport const EdgeView: React.FunctionComponent<Props> = ({\n  edge,\n  startNode,\n  endNode,\n  selected,\n  onClick,\n}) => {\n  const p = useMemo(() => calculateDirection(startNode, endNode), [startNode, endNode]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onClick(edge, event);\n    },\n    [edge, onClick],\n  );\n\n  return (\n    <>\n      <line\n        className={classNames('EdgeView', { 'EdgeView--selected': selected })}\n        x1={startNode.x + p.x * NODE_RADIUS}\n        y1={startNode.y + p.y * NODE_RADIUS}\n        x2={endNode.x - p.x * NODE_RADIUS}\n        y2={endNode.y - p.y * NODE_RADIUS}\n        markerEnd=\"url(#arrow)\"\n        onClick={handleClick}\n      />\n    </>\n  );\n};\n\nfunction calculateDirection(startNode: Node, endNode: Node): Point {\n  let dx = endNode.x - startNode.x;\n  let dy = endNode.y - startNode.y;\n  const ln = Math.sqrt(dx * dx + dy * dy);\n  dx /= ln;\n  dy /= ln;\n  return { x: dx, y: dy };\n}\n","import classNames from 'classnames';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DragPayload } from '../calculation/DragPayload';\nimport { Node } from '../calculation/Node';\nimport { Point } from '../calculation/Point';\nimport { NODE_RADIUS } from '../constants';\n\ninterface Props {\n  node: Node;\n  selected: boolean;\n  onClick: (node: Node, event: React.MouseEvent) => void;\n  onDoubleClick: (node: Node, event: React.MouseEvent) => void;\n  onMouseDown: (payload: DragPayload, event: React.MouseEvent) => void;\n  onMouseUp: (payload: DragPayload) => void;\n  onMouseMove: (payload: DragPayload) => void;\n}\n\nexport const NodeView: React.FunctionComponent<Props> = ({\n  node,\n  selected,\n  onClick,\n  onDoubleClick,\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n}) => {\n  const [startPoint, setStartPoint] = useState<Point | null>(null);\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      const point = { x: event.clientX, y: event.clientY };\n      setStartPoint(point);\n      const payload = { node, start: point, current: point };\n      onMouseDown(payload, event);\n    },\n    [onMouseDown, node],\n  );\n\n  const handleMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (startPoint !== null) {\n        const point = { x: event.clientX, y: event.clientY };\n        const payload = { node, start: startPoint, current: point };\n        setStartPoint(null);\n        onMouseUp(payload);\n      }\n    },\n    [onMouseUp, node, startPoint],\n  );\n\n  const handleMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (startPoint !== null) {\n        const point = { x: event.clientX, y: event.clientY };\n        const payload = { node, start: startPoint, current: point };\n        onMouseMove(payload);\n      }\n    },\n    [onMouseMove, node, startPoint],\n  );\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.body.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseUp]);\n\n  useEffect(() => {\n    if (startPoint === null) {\n      return;\n    }\n\n    document.body.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      document.body.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [handleMouseMove, startPoint]);\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onClick(node, event);\n    },\n    [onClick, node],\n  );\n\n  const handleDoubleClick = useCallback(\n    (event: React.MouseEvent) => {\n      event.stopPropagation();\n      onDoubleClick(node, event);\n    },\n    [onDoubleClick, node],\n  );\n\n  return (\n    <>\n      <circle\n        className={classNames('NodeView', { 'NodeView--selected': selected, dragging: startPoint })}\n        cx={node.x}\n        cy={node.y}\n        r={NODE_RADIUS}\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n        onMouseDown={handleMouseDown}\n      />\n      <Text x={node.x} y={node.y} text={node.text} />\n    </>\n  );\n};\n\n/**\n * HACK\n * @see https://stackoverflow.com/questions/4991171/auto-line-wrapping-in-svg-text\n */\nconst Text: React.FunctionComponent<{ x: number; y: number; text: string }> = ({ x, y, text }) => {\n  return (\n    <foreignObject\n      className=\"NodeView__text\"\n      x={x - NODE_RADIUS}\n      y={y - NODE_RADIUS}\n      width={NODE_RADIUS * 2}\n      height={NODE_RADIUS * 2}\n    >\n      <p className=\"NodeView__text-inner\">{text}</p>\n    </foreignObject>\n  );\n\n  // return (\n  //   <text className=\"NodeView__text\" textAnchor=\"middle\" dominantBaseline=\"central\" x={x} y={y}>\n  //     {text}\n  //   </text>\n  // );\n};\n","import { Node } from '../calculation/Node';\nimport { State } from '../calculation/State';\n\nexport enum ActionType {\n  APP_LOAD,\n  APP_RANDOMIZE,\n  GRAPH_CLEAR,\n  NODE_ADD,\n  GRAPH_REMOVE,\n  NODE_UPDATE,\n  GRAPH_SELECT,\n  GRAPH_DESELECT,\n  EDGE_ADD,\n}\n\nexport type Action =\n  | {\n      type: ActionType.APP_LOAD;\n      payload: { state: State };\n    }\n  | {\n      type: ActionType.APP_RANDOMIZE;\n    }\n  | {\n      type: ActionType.GRAPH_CLEAR;\n    }\n  | {\n      type: ActionType.NODE_ADD;\n    }\n  | {\n      type: ActionType.GRAPH_REMOVE;\n    }\n  | {\n      type: ActionType.NODE_UPDATE;\n      payload: {\n        node: Node;\n      };\n    }\n  | {\n      type: ActionType.GRAPH_SELECT;\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: ActionType.GRAPH_DESELECT;\n    }\n  | {\n      type: ActionType.EDGE_ADD;\n      payload: {\n        start: string | null;\n        end: string;\n      };\n    };\n","import React from 'react';\nimport {\n  LOGICAL_HEIGHT,\n  LOGICAL_MARGIN,\n  LOGICAL_WIDTH,\n  VISUAL_HEIGHT,\n  VISUAL_WIDTH,\n} from '../constants';\n\nexport const Stage: React.FunctionComponent<{}> = ({ children }) => {\n  return (\n    <svg\n      className=\"Stage\"\n      width={VISUAL_WIDTH}\n      height={VISUAL_HEIGHT}\n      viewBox={`${-LOGICAL_MARGIN} ${-LOGICAL_MARGIN} ${LOGICAL_WIDTH +\n        LOGICAL_MARGIN} ${LOGICAL_HEIGHT + LOGICAL_MARGIN}`}\n    >\n      <defs>\n        {arrowMarker}\n        {dotMarker}\n      </defs>\n      {children}\n    </svg>\n  );\n};\n\n/**\n * Arrow marker\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker\n */\nconst arrowMarker = (\n  <marker\n    id=\"arrow\"\n    viewBox=\"0 0 10 10\"\n    refX=\"5\"\n    refY=\"5\"\n    markerWidth=\"6\"\n    markerHeight=\"6\"\n    orient=\"auto-start-reverse\"\n  >\n    <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n  </marker>\n);\n\n/**\n * Dot marker\n * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker\n */\nconst dotMarker = (\n  <marker id=\"dot\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"5\" markerHeight=\"5\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"red\" />\n  </marker>\n);\n","import { generate } from 'shortid';\n\nexport function generateId(): string {\n  return generate();\n}\n","export function generateN(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n","import { LOGICAL_HEIGHT, LOGICAL_WIDTH } from '../constants';\nimport { generateId } from './generateId';\nimport { generateN } from './generateN';\nimport { Node } from './Node';\n\ninterface Box {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\ninterface Result {\n  box: Box;\n  nodes: Node[];\n}\n\nfunction repeat(n: number): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < n; i += 1) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction generateNode(): Node {\n  const id = generateId();\n  const x = generateN(LOGICAL_WIDTH);\n  const y = generateN(LOGICAL_HEIGHT);\n  return { id, x, y, text: 'sample' };\n}\n\nexport function generateNodes(): Node[] {\n  return repeat(5).map(() => generateNode());\n}\n\nexport function guessNode(nodes: Node[]): Node {\n  const box0 = { x: 0, y: 0, w: LOGICAL_WIDTH, h: LOGICAL_HEIGHT };\n  const box = calculateAvailableBox(box0, nodes);\n  const id = generateId();\n  const x = box.x + box.w / 2;\n  const y = box.y + box.h / 2;\n  return { id, x, y, text: '' };\n}\n\nfunction calculateAvailableBox(box: Box, nodes: Node[]): Box {\n  if (nodes.length === 0) {\n    return box;\n  }\n\n  const w2 = box.w / 2;\n  const h2 = box.h / 2;\n  const cx = box.x + w2;\n  const cy = box.y + h2;\n  const lt: Result = { box: { x: box.x, y: box.y, w: w2, h: h2 }, nodes: [] };\n  const rt: Result = { box: { x: cx, y: box.y, w: w2, h: h2 }, nodes: [] };\n  const lb: Result = { box: { x: box.x, y: cy, w: w2, h: h2 }, nodes: [] };\n  const rb: Result = { box: { x: cx, y: cy, w: w2, h: h2 }, nodes: [] };\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.x <= cx) {\n      if (node.y <= cy) {\n        lt.nodes.push(node);\n      } else {\n        lb.nodes.push(node);\n      }\n    } else {\n      if (node.y <= cy) {\n        rt.nodes.push(node);\n      } else {\n        rb.nodes.push(node);\n      }\n    }\n  }\n\n  const min = sortByLength([lt, rt, lb, rb]);\n  return isSame(nodes, min.nodes) ? min.box : calculateAvailableBox(min.box, min.nodes);\n}\n\nfunction isSame(xs: Node[], ys: Node[]): boolean {\n  return xs.length === ys.length && xs.every((x, i) => x === ys[i]);\n}\n\nfunction sortByLength(xs: Result[]): Result {\n  return xs.slice(0).sort((x, y) => x.nodes.length - y.nodes.length)[0];\n}\n","import { generateNodes, guessNode } from '../calculation/Calculation';\nimport { Edge } from '../calculation/Edge';\nimport { generateId } from '../calculation/generateId';\nimport { Node } from '../calculation/Node';\nimport { State } from '../calculation/State';\nimport { Action, ActionType } from './actions';\n\nexport const initialState: State = {\n  nodes: [],\n  edges: [],\n  selectedId: null,\n};\n\nexport function reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ActionType.APP_LOAD: {\n      return action.payload.state;\n    }\n    case ActionType.APP_RANDOMIZE: {\n      const newState: State = {\n        nodes: generateNodes(),\n        edges: [],\n        selectedId: null,\n      };\n      return newState;\n    }\n    case ActionType.GRAPH_CLEAR: {\n      return { ...state, nodes: [], edges: [], selectedId: null };\n    }\n    case ActionType.GRAPH_REMOVE: {\n      const newNodes = state.nodes.filter(node => node.id !== state.selectedId);\n      const newEdges = state.edges.filter(\n        edge =>\n          edge.id !== state.selectedId &&\n          edge.start !== state.selectedId &&\n          edge.end !== state.selectedId,\n      );\n      return { ...state, nodes: newNodes, edges: newEdges };\n    }\n    case ActionType.GRAPH_SELECT: {\n      const { id } = action.payload;\n      return { ...state, selectedId: id };\n    }\n    case ActionType.GRAPH_DESELECT: {\n      return { ...state, selectedId: null };\n    }\n    case ActionType.NODE_ADD: {\n      const newNode = guessNode(state.nodes);\n      return {\n        ...state,\n        nodes: [...state.nodes, newNode],\n      };\n    }\n    case ActionType.NODE_UPDATE: {\n      const { node } = action.payload;\n      return { ...state, nodes: updateNode(state.nodes, node) };\n    }\n    case ActionType.EDGE_ADD: {\n      const { start, end } = action.payload;\n      if (\n        start === null ||\n        start === end ||\n        !hasNodeById(state.nodes, start) ||\n        !hasNodeById(state.nodes, end) ||\n        hasEdgeByNodeIds(state.edges, start, end)\n      ) {\n        return state;\n      }\n      const newEdge = { id: generateId(), start, end };\n      return {\n        ...state,\n        edges: [...state.edges, newEdge],\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction updateNode(nodes: Node[], newNode: Node): Node[] {\n  return nodes.map(node => (node.id === newNode.id ? newNode : node));\n}\n\nfunction hasNodeById(nodes: Node[], id: string): boolean {\n  return !!nodes.find(node => node.id === id);\n}\n\nfunction hasEdgeByNodeIds(edges: Edge[], nodeId1: string, nodeId2: string): boolean {\n  return !!edges.find(\n    edge =>\n      (edge.start === nodeId1 && edge.end === nodeId2) ||\n      (edge.start === nodeId2 && edge.end === nodeId1),\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useReducer, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragPayload } from './calculation/DragPayload';\nimport { Edge } from './calculation/Edge';\nimport { Node } from './calculation/Node';\nimport { load, save } from './calculation/Storage';\nimport { ControlPanel } from './components/ControlPanel';\nimport { EdgeView } from './components/EdgeView';\nimport { NodeView } from './components/NodeView';\nimport { Stage } from './components/Stage';\nimport { SCALE_X, SCALE_Y } from './constants';\nimport { ActionType } from './redux/actions';\nimport { initialState, reducer } from './redux/reducer';\n\nconst noop = () => {};\n\nconst App: React.FunctionComponent<{}> = () => {\n  const [draggingNode, setDraggingNode] = useState<Node | null>(null);\n  const [dragging, setDragging] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { nodes, edges, selectedId } = state;\n  const nodesById = useMemo(() => createLookupTable(nodes), [nodes]);\n\n  const handleClear = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_CLEAR });\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    dispatch({ type: ActionType.NODE_ADD });\n  }, []);\n\n  const handleClickNode = useCallback(\n    (node: Node, event: React.MouseEvent) => {\n      if (event.ctrlKey || event.metaKey) {\n        dispatch({ type: ActionType.EDGE_ADD, payload: { start: selectedId, end: node.id } });\n      } else {\n        dispatch({ type: ActionType.GRAPH_SELECT, payload: { id: node.id } });\n      }\n    },\n    [selectedId],\n  );\n\n  const handleClickEdge = useCallback((edge: Edge) => {\n    dispatch({ type: ActionType.GRAPH_SELECT, payload: { id: edge.id } });\n  }, []);\n\n  const handleDoubleClick = useCallback((node: Node) => {\n    const newText = prompt('text');\n    if (newText !== null) {\n      const newNode = { ...node, text: newText };\n      dispatch({ type: ActionType.NODE_UPDATE, payload: { node: newNode } });\n    }\n  }, []);\n\n  const handleDeselect = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_DESELECT });\n  }, []);\n\n  const handleRemove = useCallback(() => {\n    dispatch({ type: ActionType.GRAPH_REMOVE });\n  }, []);\n\n  const handleMouseDown = useCallback(({ node }: DragPayload) => {\n    setDraggingNode(node);\n  }, []);\n\n  const handleMouseUp = useCallback(\n    (_: DragPayload) => {\n      if (draggingNode !== null) {\n        dispatch({ type: ActionType.NODE_UPDATE, payload: { node: draggingNode } });\n        setDraggingNode(null);\n        setDragging(false);\n      }\n    },\n    [draggingNode],\n  );\n\n  const handleMouseMove = useCallback(\n    (payload: DragPayload) => {\n      if (draggingNode !== null) {\n        const node = calculateDraggingNode(payload);\n        if (!isEqual(node, payload.node)) {\n          setDraggingNode(node);\n          setDragging(true);\n        }\n      }\n    },\n    [draggingNode],\n  );\n\n  const handleSave = useCallback(() => {\n    save(state);\n  }, [state]);\n\n  const handleRandomize = useCallback(() => {\n    dispatch({ type: ActionType.APP_RANDOMIZE });\n  }, []);\n\n  useEffect(() => {\n    const loadedState = load();\n    if (loadedState !== null) {\n      dispatch({ type: ActionType.APP_LOAD, payload: { state: loadedState } });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\" onClick={handleDeselect}>\n      <ControlPanel\n        onAdd={handleAdd}\n        onRemove={handleRemove}\n        onClear={handleClear}\n        onRandomize={handleRandomize}\n        onSave={handleSave}\n        canRemove={selectedId !== null}\n      />\n      <Stage>\n        {edges.map(edge => (\n          <EdgeView\n            key={edge.id}\n            edge={edge}\n            startNode={nodesById[edge.start]}\n            endNode={nodesById[edge.end]}\n            selected={selectedId === edge.id}\n            onClick={handleClickEdge}\n          />\n        ))}\n        {nodes.map(node => (\n          <NodeView\n            key={node.id}\n            node={node}\n            selected={selectedId === node.id}\n            onClick={handleClickNode}\n            onDoubleClick={handleDoubleClick}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onMouseMove={handleMouseMove}\n          />\n        ))}\n        {dragging && draggingNode !== null && (\n          <NodeView\n            key={draggingNode.id}\n            node={draggingNode}\n            selected={false}\n            onClick={noop}\n            onDoubleClick={noop}\n            onMouseDown={noop}\n            onMouseUp={noop}\n            onMouseMove={noop}\n          />\n        )}\n      </Stage>\n    </div>\n  );\n};\n\nfunction createLookupTable<T extends { id: string }>(values: T[]): Record<string, T> {\n  const result: Record<string, T> = {};\n  values.forEach(value => {\n    result[value.id] = value;\n  });\n  return result;\n}\n\nfunction calculateDraggingNode({ node, start, current }: DragPayload): Node {\n  const dx = (current.x - start.x) / SCALE_X;\n  const dy = (current.y - start.y) / SCALE_Y;\n  return { ...node, x: Math.floor(node.x + dx), y: Math.floor(node.y + dy) };\n}\n\nfunction isEqual(a: Node, b: Node): boolean {\n  return a.id === b.id && a.x === b.x && a.y === b.y;\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}